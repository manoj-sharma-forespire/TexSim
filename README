TexSim

Python implentation that finds the cosine similarity of two documents.
Steps:
	1. Performs Tokenization (at sentence level first and then at word level)
	2. Removes Stop words from the documents (Removes frequently used words of the English language)
	3. Performs Stemming (returns the root stem of each word)
	4. Forms vectors
	5. Computes the cosine similarity
	
	
Note:
	In order to perform the NLP operations I have made use of NLTK (Natural Language ToolKit http://www.nltk.org/)
	
	
	
File Structure:
	\code #Contains the code files
		TexSimWrapper.py
		\texsim
			\util
				ArticleTokenizer.py
				SimilarityFinder.py
				Stemmer.py
				StopWordRemover.py
	\data #used to store the input and intermediate files			 
				
				
   Copyright [2012] [Vivek Hariharan]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
